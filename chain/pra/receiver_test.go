package pra

import (
	"encoding/json"
	"errors"
	"fmt"
	"io/ioutil"
	"testing"

	"github.com/centrifuge/go-substrate-rpc-client/v3/types"
	"github.com/ethereum/go-ethereum/ethclient"
	"github.com/ethereum/go-ethereum/rpc"
	"github.com/icon-project/btp/chain"
	"github.com/icon-project/btp/chain/pra/binding"
	"github.com/icon-project/btp/chain/pra/mocks"
	"github.com/icon-project/btp/chain/pra/substrate"
	"github.com/icon-project/btp/common/log"
	scalecodec "github.com/itering/scale.go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
	"github.com/stretchr/testify/require"
)

type blockinfo struct {
	BlockNumber            uint64
	Hash                   substrate.SubstrateHash
	Header                 substrate.SubstrateHeader
	ScaleEncodedHeader     []byte
	StorageKey             substrate.SubstrateStorageKey
	SystemEventsStorageRaw substrate.SubstrateStorageDataRaw
	SystemEventsReadProof  substrate.SubstrateReadProof
}

func readBlockInfoFromAssets(path string, bi *blockinfo) error {
	b, err := ioutil.ReadFile(path)
	if err != nil {
		panic(err)
	}

	return json.Unmarshal(b, &bi)
}

func TestReceiver_ReceiveLoop(t *testing.T) {
	t.Run("should monitor from the given height", func(t *testing.T) {
		subClient := &substrate.MockSubstrateClient{}
		r := &Receiver{
			l: log.New(),
			c: &Client{
				subClient:         subClient,
				stopMonitorSignal: make(chan bool),
			},
		}

		bi := &blockinfo{}
		require.NoError(t, readBlockInfoFromAssets("assets/moonbase_blockinfo_243221.json", bi))

		subClient.On("GetFinalizedHead").Return(bi.Hash, nil).Once()
		subClient.On("GetHeader", bi.Hash).Return(&bi.Header, nil).Twice()
		subClient.On("GetBlockHash", uint64(bi.BlockNumber)).Return(bi.Hash, nil).Once()
		subClient.On("GetSystemEvents", bi.Hash, "EVM", "Log").Return(make([]map[string]interface{}, 0), nil).Once()

		err := r.ReceiveLoop(243221, 1, func(bu *chain.BlockUpdate, rps []*chain.ReceiptProof) {
			assert.EqualValues(t, bu.Height, 243221)
			assert.Equal(t, bi.Hash.Hex(), fmt.Sprintf("0x%x", bu.BlockHash))
			assert.Equal(t,
				fmt.Sprintf("0x%x", bi.ScaleEncodedHeader),
				fmt.Sprintf("0x%x", bu.Header),
			)
			assert.Equal(t, "0xf90141b9013b4b6ca5b74e19d4bc04280edf20a53a4ebe1402cbb2ef7ed9a1611fb8411a33ca56d80e006415ef11020701d83ae5456ccecb3685eb39acc6b52d3e481214d8f1aa6b5465e347562ba9c7c993862047e1d6f020c25ab4139676afbf7170c254e2f36cefe70c046e6d62738060eed538a43e6738f4c560c5d950be96c72ad591f0c16f564c003b5c7b895c0e0466726f6e890101f7b9c5fb3f5b72f937ed511b173e5a39b9fb3ffaa1cc4dd024a4c7c36c7da8610847fec28647d5f0806548f385257170d76cf6e890f7467ef33b36dcc5b9be1b15d0fdb267aa2fce057cc81a0e2397f5a32ffd8637753f7d0c0c0b7289b002dc3f056e6d627301019a1b7069e8aa71015a15925595589999890dba42cb87dae2b5aabfee791bad47d380392c626eef34701ea3a95d7dd4fc891759cb375991aacbc1ee3663742289c2f800",
				fmt.Sprintf("0x%x", bu.Proof),
			)
			r.StopReceiveLoop()
			subClient.AssertExpectations(t)
		}, func() {})

		assert.NoError(t, err)
	})

	t.Run("should call bmc.parseMessage N times when Parachain emits N events of EVMLog", func(t *testing.T) {
		subClient := &substrate.MockSubstrateClient{}
		bmcContract := &mocks.BMCContract{}
		r := &Receiver{
			l: log.New(),
			c: &Client{
				subClient:         subClient,
				stopMonitorSignal: make(chan bool),
				bmc:               bmcContract,
			},
			src: chain.BtpAddress("btp://0x507.pra/0x64b22d2b8c3ca311a0c2de34bf799f8101c89362"),
		}

		bi := &blockinfo{}
		require.NoError(t, readBlockInfoFromAssets("assets/moonbase_blockinfo_315553.json", bi))

		subClient.On("GetFinalizedHead").Return(bi.Hash, nil).Once()
		subClient.On("GetHeader", bi.Hash).Return(&bi.Header, nil).Once()
		subClient.On("GetBlockHash", uint64(bi.BlockNumber)).Return(bi.Hash, nil).Once()
		subClient.On("GetHeader", bi.Hash).Return(&bi.Header, nil).Once()
		subClient.On("GetSystemEvents", bi.Hash, "EVM", "Log").Return([]map[string]interface{}{
			{"event_id": "Log", "event_idx": 3, "extrinsic_idx": 3, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x64b22d2b8c3ca311a0c2de34bf799f8101c89362", "data": "0000000000000000000000000000000000000000000000000000000060ec0616", "topics": []string{"0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271", "0x00000000000000000000000000000000000000000000000000000000000005f1", "0x0000000000000000000000006ffa2707ea1fe81c8dafa755e74f4961333b75fa"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 4, "extrinsic_idx": 3, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x64b22d2b8c3ca311a0c2de34bf799f8101c89362", "data": "", "topics": []string{"0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c", "0x000000000000000000000000000000000000000000000000000000075cd0d636", "0x00000000000000000000000000000000000000000000000000000000000005f1", "0x0000000000000000000000006ffa2707ea1fe81c8dafa755e74f4961333b75fa"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 5, "extrinsic_idx": 3, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x64b22d2b8c3ca311a0c2de34bf799f8101c89362", "data": "0000000000000000000000000000000000000000000000000000000060ec0616", "topics": []string{"0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f", "0x000000000000000000000000000000000000000000000000000000075cd0d636", "0x00000000000000000000000000000000000000000000000000000000000005f1"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 6, "extrinsic_idx": 3, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x64b22d2b8c3ca311a0c2de34bf799f8101c89362", "data": "", "topics": []string{"0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f", "0x000000000000000000000000000000000000000000000002b5e3af16a8772360"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
		}, nil).Once()
		// 4 EVM_Logs event
		bmcContract.On("ParseMessage", mock.AnythingOfType("types.Log")).Return(nil, errors.New("abi: could not locate named method or event")).Times(4)
		err := r.ReceiveLoop(315553, 1, func(bu *chain.BlockUpdate, rps []*chain.ReceiptProof) {
			assert.EqualValues(t, bu.Height, 315553)
			assert.Equal(t, bi.Hash.Hex(), fmt.Sprintf("0x%x", bu.BlockHash))
			assert.Equal(t,
				fmt.Sprintf("0x%x", bi.ScaleEncodedHeader),
				fmt.Sprintf("0x%x", bu.Header),
			)
			assert.Equal(t, "0xf90181b9017bf1e8f0653422859dea6705ec5d86015a3c9f4c7c03eccbcb4bf858682956fb2886421300932c9abc4e9966ecf08dd3a5aa7087b448a88e54d18b3caebdbb2559c3f8744b25385e8e912f3965b85334a4524a6e15b21fb3c1b355d9e64df395b856a635970c046e6d6273802485ca9e9427894cb1864d725977e3c168171daf22bacf64c7ad5e0674c331730466726f6e890201e93015e1d2195ae2d73004a790db2e4bf394e40f14df3e0a2edd9dff0930e8a910ef0e6bfa9d8bb055f94e873f1df551b42df11d2cb053811279a1101e9c03fcf9cfa1b41ba3027ac3bbda9af6685440e8d89f12c7aca5987b334e91dbbaa4aa9356cb1e07577d7374463ec88709ce945f280b072b89f4bc8c0e70abf4b9b267c090d9ec032f7d7121f9bc2b2a8b9a6a06fd7f434cbebb963d6cfcb2e4206d2f43056e6d627301019cb74fccc8c86d67b5766b1c035e16ed4de18ecd091d4dd8724185eb28dbd1612983e904aafb984f05bd27443b6f8a56fbea955e208718d02e52eb28d0e62e89c2f800",
				fmt.Sprintf("0x%x", bu.Proof),
			)
			r.StopReceiveLoop()
			subClient.AssertExpectations(t)
			bmcContract.AssertNumberOfCalls(t, "ParseMessage", 4)
		}, func() {})

		assert.NoError(t, err)
	})

	t.Run("should build StateProof when EVM Log events contains BMC SendMessage Event", func(t *testing.T) {
		subClient := &substrate.MockSubstrateClient{}
		ethClient := ethclient.NewClient(&rpc.Client{})

		bmc, err := binding.NewBMC(EvmHexToAddress("0x0daaab07b078fd9cc8ebc7f980aefd0e2aba2ec6"), ethClient)
		require.NoError(t, err)

		r := &Receiver{
			l:   log.New(),
			src: "btp://0x507.pra/0x0daaab07b078fd9cc8ebc7f980aefd0e2aba2ec6",
			c: &Client{
				subClient:         subClient,
				ethClient:         ethClient,
				stopMonitorSignal: make(chan bool),
				bmc:               bmc,
			},
		}

		bi := &blockinfo{}
		require.NoError(t, readBlockInfoFromAssets("assets/moonbase_blockinfo_814054.json", bi))

		subClient.On("GetFinalizedHead").Return(bi.Hash, nil).Once()
		subClient.On("GetHeader", bi.Hash).Return(&bi.Header, nil).Once()
		subClient.On("GetBlockHash", uint64(bi.BlockNumber)).Return(bi.Hash, nil).Once()
		subClient.On("GetHeader", bi.Hash).Return(&bi.Header, nil).Once()
		subClient.On("GetSystemEvents", bi.Hash, "EVM", "Log").Return([]map[string]interface{}{
			{"event_id": "Log", "event_idx": 11, "extrinsic_idx": 4, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x0daaab07b078fd9cc8ebc7f980aefd0e2aba2ec6", "data": "0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000003a6274703a2f2f307834322e69636f6e2f63783837316166613362643061646661313339663638616338383831396461353361643434656630373700000000000000000000000000000000000000000000000000000000000000000000000000f4f8f2b83a6274703a2f2f30783530372e7072612f307830446141416230376230373866643963433865626337663938306165466430653261426132456336b83a6274703a2f2f307834322e69636f6e2f6378383731616661336264306164666131333966363861633838383139646135336164343465663037378a6e6174697665636f696e01b86cf86a00b867f865aa307844303764303738333733624536306464313065333566333532353539656631663235303239444166aa637838373161666133626430616466613133396636386163383838313964613533616434346566303737cecd83444556880dbd2fc1379b5ee0000000000000000000000000", "topics": []string{"0x37be353f216cf7e33639101fd610c542e6a0c0109173fa1c1d8b04d34edb7c1b"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 12, "extrinsic_idx": 4, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xc06be3322f7118b14843861b424698646875ce64", "data": "0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000003a6274703a2f2f307834322e69636f6e2f6378383731616661336264306164666131333966363861633838383139646135336164343465663037370000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000dbd2fc1379b5ee0000000000000000000000000000000000000000000000000002386f26fc8a12000000000000000000000000000000000000000000000000000000000000000034445560000000000000000000000000000000000000000000000000000000000", "topics": []string{"0x50d22373bb84ed1f9eeb581c913e6d45d918c05f8b1d90f0be168f06a4e6994a", "0x000000000000000000000000d07d078373be60dd10e35f352559ef1f25029daf"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 16, "extrinsic_idx": 5, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xcf88a8d7fc1a687895fc8ffaad567f303926b094", "data": "00000000000000000000000000000000000000000000000000000000614c0ab4", "topics": []string{"0x0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac60271", "0x0000000000000000000000000000000000000000000000000000000000000b3d", "0x0000000000000000000000006ffa2707ea1fe81c8dafa755e74f4961333b75fa"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 17, "extrinsic_idx": 5, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xcf88a8d7fc1a687895fc8ffaad567f303926b094", "data": "", "topics": []string{"0x92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c", "0x000000000000000000000000000000000000000000000000000004027f32c45a", "0x0000000000000000000000000000000000000000000000000000000000000b3d", "0x0000000000000000000000006ffa2707ea1fe81c8dafa755e74f4961333b75fa"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 18, "extrinsic_idx": 5, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xcf88a8d7fc1a687895fc8ffaad567f303926b094", "data": "00000000000000000000000000000000000000000000000000000000614c0ab4", "topics": []string{"0x0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f", "0x000000000000000000000000000000000000000000000000000004027f32c45a", "0x0000000000000000000000000000000000000000000000000000000000000b3d"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 19, "extrinsic_idx": 5, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xcf88a8d7fc1a687895fc8ffaad567f303926b094", "data": "", "topics": []string{"0xfe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f", "0x000000000000000000000000000000000000000000000002b5e3af16a0620be0"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 23, "extrinsic_idx": 6, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x5425f5d4ba2b7dcb277c369ccbcb5f0e7185fb41", "data": "00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030d4000000000000000000000000000000000000000000000000000000000614c0ab100000000000000000000000000000000000000000000000000000000000000034e554f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034441490000000000000000000000000000000000000000000000000000000000", "topics": []string{"0x8d468b5f823f8d38322e9c4433d184adf453fd3eaa28cef280056aa0664981f0"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 33, "extrinsic_idx": 9, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x81e42baeee09de2880d4a8842edb1911755ac48d", "data": "00000000000000000000000000000000000000000000001c3c1b11702bed53c7000000000000000000000000000000000000000000000000000002ff386592790000000000000000000000000000000000000000000000000df3ed9d5c44a643000000000000000000000000000000000000000000000005ac5f23236b6319b3", "topics": []string{"0x4dec04e750ca11537cabcd8a9eab06494de08da3735bc8871cd41250e190bc04"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 34, "extrinsic_idx": 9, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xf3fc5f877e9dd90277c072ff3d07d076337fa29d", "data": "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "topics": []string{"0x2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a", "0x00000000000000000000000081e42baeee09de2880d4a8842edb1911755ac48d", "0x00000000000000000000000045451aadad03ed94b94fcec603af11f2e8f16c1b"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 35, "extrinsic_idx": 9, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xd50e4638b5f58a66a5f4ff81f092db2357ecc6fb", "data": "000000000000000000000000000000000000000000000000002386f26fc10000", "topics": []string{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "0x00000000000000000000000045451aadad03ed94b94fcec603af11f2e8f16c1b", "0x00000000000000000000000081e42baeee09de2880d4a8842edb1911755ac48d"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 36, "extrinsic_idx": 9, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x81e42baeee09de2880d4a8842edb1911755ac48d", "data": "00000000000000000000000045451aadad03ed94b94fcec603af11f2e8f16c1b000000000000000000000000000000000000000000000000002386f26fc1000000000000000000000000000000000000000000000000000000237c1b53067785", "topics": []string{"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 37, "extrinsic_idx": 9, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0x81e42baeee09de2880d4a8842edb1911755ac48d", "data": "00000000000000000000000000000000000000000000000000237c1b53067785", "topics": []string{"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", "0x00000000000000000000000081e42baeee09de2880d4a8842edb1911755ac48d", "0x00000000000000000000000045451aadad03ed94b94fcec603af11f2e8f16c1b"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
			{"event_id": "Log", "event_idx": 41, "extrinsic_idx": 10, "module_id": "EVM", "params": []scalecodec.EventParam{{Type: "Log", Value: map[string]interface{}{"address": "0xd50e4638b5f58a66a5f4ff81f092db2357ecc6fb", "data": "00000000000000000000000000000000000004ee2d6d415b85acef8100000000", "topics": []string{"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925", "0x0000000000000000000000004bd9e71910a5526375f417232264b6dcf1c21e49", "0x00000000000000000000000081e42baeee09de2880d4a8842edb1911755ac48d"}}}}, "phase": 0, "topic": []string{}, "type": "0a00"},
		}, nil).Once()
		subClient.On("GetSystemEventStorageKey", bi.Hash).Return(bi.StorageKey, nil).Once()
		subClient.On("GetReadProof", bi.StorageKey, bi.Hash).Return(bi.SystemEventsReadProof, nil).Once()

		err = r.ReceiveLoop(814054, 2, func(bu *chain.BlockUpdate, rps []*chain.ReceiptProof) {
			assert.EqualValues(t, bu.Height, 814054)
			assert.Equal(t, bi.Hash.Hex(), fmt.Sprintf("0x%x", bu.BlockHash))
			assert.Equal(t,
				fmt.Sprintf("0x%x", bi.ScaleEncodedHeader),
				fmt.Sprintf("0x%x", bu.Header),
			)
			assert.Equal(t, "0xf90201b901fb7c5eb3821324777aa80bcb46570cf52dde89b136c009b5e51c52f1efec2d75759aaf3100a7b5be88098bbb994a595b60e4d33fa1167d9b19ba0ef242e3092d81059af071f715dc6d161ee4f970dcc197a0393d3f9692ec6f8b3ef21e71f92971d8514c730c046e6d627380a0074c2df0eccdbfad8b29b3a284fa597e7e48ffffc86c842fe75fdef9d480710466726f6e8904018239fd93348272db330c1e3901b78be4112ab61d19519ad4a2e808d88df0ca4f207ab3cd8d71cee1aa5f90970b7c35cc1c523c02f0932572e4888ce7cc643509a1d48e3dc4382221d839edc8988309d2f51d6c2c24d61854602bfe5ee4aa945848eada3b8729301971b526b555143b78bdc79ab58a5f3469c9e6cb3fd7dc2ed0140a2c98df470b9c67e66b9d1c56a01134f4855c945ca6a5cb0db20088bad2dbb7b0cec4eee2a3b90afcd6bc9de569743251b8a620f65be7e3a8d3e35da5c456067239b6b7115de5d5aa73729cd621c95b7fab968f44128a7bf77d8569589c69e7fb98f13c088231b45bb8e5c0c36b1ededad1b64ea30407c669ac88f03cb263ab29bc13947146e7799e4f9f6f76e3f1dca42facf6b4eb28106085f8fb46bf1eea056e6d62730101d8eb51a193bb725b141d0eee00adea6f9b1d9c83c340c4ce785bac5987059d0e96fc680c8b5af10182be5c589b2ca59dce3fc0f738b248ded6cca1b3ade50c83c2f800",
				fmt.Sprintf("0x%x", bu.Proof),
			)
			assert.NotEmpty(t, rps)
			assert.Equalf(t, &chain.ReceiptProof{
				Height: 814054,
				Proof:  types.MustHexDecodeString(""),
				Events: []*chain.Event{{
					Next:     "btp://0x42.icon/cx871afa3bd0adfa139f68ac88819da53ad44ef077",
					Sequence: int64(2),
					Message:  types.MustHexDecodeString("f8f2b83a6274703a2f2f30783530372e7072612f307830446141416230376230373866643963433865626337663938306165466430653261426132456336b83a6274703a2f2f307834322e69636f6e2f6378383731616661336264306164666131333966363861633838383139646135336164343465663037378a6e6174697665636f696e01b86cf86a00b867f865aa307844303764303738333733624536306464313065333566333532353539656631663235303239444166aa637838373161666133626430616466613133396636386163383838313964613533616434346566303737cecd83444556880dbd2fc1379b5ee0"),
				}},
			}, rps[0], "ReceiptProofs incorrect %x", rps[0])
			r.StopReceiveLoop()
			subClient.AssertExpectations(t)
		}, func() {})

		assert.NoError(t, err)
	})
}
