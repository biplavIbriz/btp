package substrate

import (
	"testing"

	"github.com/centrifuge/go-substrate-rpc-client/v3/types"
	scalecodec "github.com/itering/scale.go"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestNewNewEncodedVoteMessage(t *testing.T) {
	hash, err := types.NewHashFromHexString("0x6521df611a96c354e6937d8c88cc5d37ab8b0d4254b48e7dade360843d71343c")
	require.NoError(t, err)
	rawByte, err := NewEncodedVoteMessage(VoteMessage{
		Message: SignedMessageEnum{
			IsPrecommit: true,
			AsPrecommit: SignedMessage{
				TargetHash:   hash,
				TargetNumber: types.NewU32(1045791),
			},
		},
		Round: types.NewU64(123),
		SetId: types.NewU64(123),
	})

	assert.NoError(t, err)
	rawHex := types.HexEncodeToString(rawByte)
	assert.Equal(t, rawHex, "0x016521df611a96c354e6937d8c88cc5d37ab8b0d4254b48e7dade360843d71343c1ff50f007b000000000000007b00000000000000")
}

func TestNewEventEVMLog(t *testing.T) {
	event := map[string]interface{}{
		"phase":         0,
		"extrinsic_idx": 3,
		"type":          "0a00",
		"module_id":     "EVM",
		"event_idx":     4,
		"params": []scalecodec.EventParam{
			{
				Type: "Log",
				Value: map[string]interface{}{
					"address": "0x0d519eff262b8aa03bba721c9a77a037e17241eb",
					"data":    "0000000000000000000000000000000000000000000000000000000000000019000000000000000000000000dba3e7d48372b4f3e5cb9baf8cfbe974038a35d800000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000012000000000000000000000003052a3c71ffbab18833722561ab831ad000014d401000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000019000000000000000000000000000000000000000000000000000000000000001900000000000000000000000000000000000000000000000000000000000000030102030000000000000000000000000000000000000000000000000000000000",
					"topics": []string{
						"0xf6a97944f31ea060dfde0566e4167c1a1082551e64b60ecb14d599a9d023d451",
						"0x0000000000000000000000000000000000000000000000000000000000000233",
					},
				},
			},
		},
		"topic": make([]string, 0),
	}

	evmLogEvent := NewEventEVMLog(event)
	assert.Equal(t, evmLogEvent, EventEVMLog{
		Log: EthereumLog{
			Address: "0x0d519eff262b8aa03bba721c9a77a037e17241eb",
			Data:    "0000000000000000000000000000000000000000000000000000000000000019000000000000000000000000dba3e7d48372b4f3e5cb9baf8cfbe974038a35d800000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000012000000000000000000000003052a3c71ffbab18833722561ab831ad000014d401000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000019000000000000000000000000000000000000000000000000000000000000001900000000000000000000000000000000000000000000000000000000000000030102030000000000000000000000000000000000000000000000000000000000",
			Topics: []string{
				"0xf6a97944f31ea060dfde0566e4167c1a1082551e64b60ecb14d599a9d023d451",
				"0x0000000000000000000000000000000000000000000000000000000000000233",
			},
		},
	})
}
